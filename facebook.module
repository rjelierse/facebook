<?php
/**
 * Facebook module.
 *
 * @file Contains the hook implementations and generic functions.
 */

/**
 * Display the Facebook Like button inline with the node content.
 */
define('FACEBOOK_LIKE_INLINE', 1);

/**
 * Display the Facebook Like button inside the links section for the node.
 */
define('FACEBOOK_LIKE_LINKS', 2);

/**
 * Do not display the Facebook Like button, just add the rendered button to the node object for the theme to handle.
 */
define('FACEBOOK_LIKE_TEMPLATE', 3);

/**
 * Add menu items for the Facebook module.
 *
 * @return array
 *     Additional menu items.
 *
 * @seealso hook_menu()
 */
function facebook_menu() {
    return array(
        'admin/settings/facebook' => array(
            'title' => 'Facebook',
            'description' => 'Manage Facebook API settings',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('facebook_settings'),
            'access arguments' => array('administer facebook'),
            'file' => 'facebook.admin.inc'
        ),
        'admin/settings/facebook/website' => array(
            'title' => 'Website',
            'description' => 'Manage settings for the Facebook API that relate to the entire website.',
            'type' => MENU_DEFAULT_LOCAL_TASK,
            'weight' => -50
        ),
        'admin/settings/facebook/like' => array(
            'title' => 'Like button',
            'description' => 'Edit how the Like button is displayed on nodes.',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('facebook_like_settings'),
            'access arguments' => array('administer facebook'),
            'type' => MENU_LOCAL_TASK,
            'weight' => -40,
            'file' => 'facebook.admin.inc'
        )
    );
}

/**
 * Add additional permission for the Facebook module.
 *
 * @return array
 *     Additional permissions.
 *
 * @seealso hook_perm()
 */
function facebook_perm() {
    return array('administer facebook');
}

/**
 * Prepare the page for the Facebook API.
 *
 * This adds the JavaScript SDK and settings for the configured Facebook Application.
 *
 * @seealso hook_init()
 */
function facebook_init() {
    $app_id = variable_get('facebook_app_id', NULL);
    $access_token = facebook_get_access_token($app_id);

    // Add support for the Facebook JavaScipt SDK
    $lang = opengraph_get_language();
    drupal_set_html_head('<script type="text/javascript" src="http://connect.facebook.net/'.$lang.'/all.js"></script>');

    // Drupal.settings object data
    $settings = array(
        'appId' => $app_id,
        'accessToken' => $access_token,
    );

    drupal_add_js(array('facebook' => $settings), 'setting');
    drupal_add_js(drupal_get_path('module', 'facebook') . '/facebook.js');
}

/**
 * Add the JavaScript SDK placeholder element to the site closure.
 *
 * @return string
 *     Content for the closure section of the website.
 *
 * @seealso hook_footer()
 */
function facebook_footer() {
    return '<div id="fb-root"></div>';
}

/**
 * Adds the Facebook namespace to the page.
 *
 * @return array
 *     Additional namespaces.
 *
 * @seealso hook_namespaces()
 */
function facebook_namespaces() {
    return array(
        'fb' => 'http://www.facebook.com/2008/fbml',
    );
}

/**
 * Retrieve the access token for a Facebook application.
 *
 * @param string $app_id
 *     The Facebook application ID.
 *
 * @return string
 *     The access token for the application.
 */
function facebook_get_access_token($app_id) {
    $app_secret = variable_get('facebook_app_secret', NULL);
    $access_token = variable_get('facebook_app_access_token', NULL);

    if ($access_token === NULL && ($app_id !== NULL && $app_secret !== NULL)) {
        $request = sprintf('https://graph.facebook.com/oauth/access_token?client_id=%s&client_secret=%s&grant_type=client_credentials', $app_id, $app_secret);
        $c = curl_init($request);
        curl_setopt($c, CURLOPT_RETURNTRANSFER, TRUE);
        curl_setopt($c, CURLOPT_SSL_VERIFYPEER, FALSE);
        $result = curl_exec($c);
        curl_close($c);
        if ($result !== FALSE) {
            parse_str($result);
            variable_set('facebook_app_access_token', $access_token);
            drupal_set_message(t('Updated Facebook Application Access Token'));
        } else {
            drupal_set_message(t('Failed to update Facebook Application Access Token'), 'error');
        }
    }

    return $access_token;
}

/**
 * Check a given array of attributes for validity and prepare them for
 * usage for the Facebook JavaScript SDK.
 *
 * @param array $attributes
 *     The attributes defined.
 * @param array $allowed_attributes
 *     The allowed attributes for the element on which they are used.
 * @param bool $html5
 *     The attributes should be prepared for inclusion as html5 data.
 *
 * @return array
 *     The cleaned up array of attributes to apply on the element.
 */
function facebook_prepare_attributes($attributes, $allowed_attributes, $html5 = false) {
    foreach ($attributes as $name => $value) {
        if (empty($value) || !in_array($name, $allowed_attributes)) {
            unset($attributes[$name]);
            continue;
        }

        // Convert boolean values to textual representations.
        switch($name) {
        case 'send':
        case 'show_faces':
            $attributes[$name] = ($value) ? 'true' : 'false';
            break;
        }

        // If HTML5, convert attributes to data attributes.
        if ($html5) {
            $data = 'data-' . str_replace('_', '-', $name);
            $attributes[$data] = $attributes[$name];
            unset($attributes[$name]);
        }
    }

    return $attributes;
}